# Trigger the workflow only when:
# - an existing pull request with any name/type is merged to the master or develop branch
# - a commit is directly pushed to the master or develop branch
 
name: Merge
 
on:
  push:
    branches:
      - main
      - develop
 
jobs:
 
  setup:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.vars.outputs.ver }}
    steps:
      - name: Use repository
        uses: actions/checkout@v2
      - name: Build variables
        id: vars
        run: |
          echo "::set-output name=ver::$(git rev-parse --short "$GITHUB_SHA")"
      - name: Upload repository
        uses: actions/upload-artifact@v2
        with:
          name: repository
          path: |
            ${{ github.workspace }}/docker
            ${{ github.workspace }}/.dockerignore
            ${{ github.workspace }}/main.go
            ${{ github.workspace }}/main_test.go
            ${{ github.workspace }}/go.mod
            ${{ github.workspace }}/go.sum
 
  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Use Golang 1.21.0
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.0
      - name: Download repository
        uses: actions/download-artifact@v2
        with:
          name: repository
      - name: Run tests
        run: go test -v -race -timeout=180s -count=1 -cover ./...
 
  docker:
    needs: [setup, test]
    runs-on: ubuntu-latest
    steps:
      - name: Download repository
        uses: actions/download-artifact@v2
        with:
          name: repository
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/Dockerfile
          tags: "nkirui2030/pacman:latest"
          build-args: VER=${{ needs.setup.outputs.ver }}
 
  config:
    needs: [setup, docker]
    runs-on: ubuntu-latest
    steps:
      - name: Use config repository
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          ref: main
          token: ${{ secrets.ACTIONS_TOKEN }}
      - name: Push commit hash to config repository
        run: |
          echo ${{ needs.setup.outputs.ver }} > infra/helm/pacman/crds/vcs/hash
          git config user.name $(git log -n 1 --pretty=format:%an)
          git config user.email $(git log -n 1 --pretty=format:%ae)
          git commit infra/helm/pacman/crds/vcs/hash -m "pacman ${{ needs.setup.outputs.ver }}"
          git push origin HEAD